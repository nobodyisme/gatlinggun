#!/usr/bin/env python
import json
import logging
from logging.handlers import SysLogHandler, RotatingFileHandler
import opster
import sys
import time

import elliptics
from opster import command

from gatlinggun import daemon
from gatlinggun.gun import Gun
from gatlinggun.transport import ZK

DEFAULT_ZOOKEEPER_HOST = '127.0.0.1'
DEFAULT_ZOOKEEPER_PORT = '2181'

DEFAULT_LOGGING_PATH = '/var/log/gatlinggun/elliptics.log'
DEFAULT_LOGGING_MASK = 31


def setup_logger():
    my_logger = logging.getLogger('gatlinggun')
    my_logger.setLevel(logging.DEBUG)

    # handler = SysLogHandler(address='/dev/log')

    # my_logger.addHandler(handler)
    handler = RotatingFileHandler('/var/log/gatlinggun/daemon.log')

    formatter = logging.Formatter('%(asctime)s %(processName)s [%(levelname)s] %(message)s')
    handler.setFormatter(formatter)

    my_logger.addHandler(handler)

    my_logger.debug('this is debug')
    my_logger.critical('this is critical')
    return my_logger

logger = setup_logger()

def parse_address(s, default_port=None):
    parts = s.split(':', 1)
    try:
        host, port = parts[0], len(parts) == 2 and int(parts[1]) or default_port
    except (TypeError, ValueError):
        raise ValueError('Bad host address: %s' % s)
    return host, port


@command(usage='-g GROUP -e ELLIPTICS-NODE -z ZOOKEEPER-HOST')
def main(group=('g', '', 'Group id of node where daemon is being run'),
         enode=('e', '', 'Elliptics node which daemon will use for cache distribution'),
         zhost=('z', '%s:%s' % (DEFAULT_ZOOKEEPER_HOST, DEFAULT_ZOOKEEPER_PORT),
                'Zookeper queue for cache tasks fetching')):
    """This script starts gatling gun daemon that
    distributes keys to designated cache nodes"""

    if not elliptics or not zhost or not group:
        main.help()
        sys.exit(1)

    parts = enode.split(':', 1)
    ehost, eport = parse_address(enode)
    group = int(group)
    logger.info('Group %d' % group)

    logger.info('Connection to elliptics node %s:%s' % (ehost, eport))
    node = elliptics.Node(elliptics.Logger(DEFAULT_LOGGING_PATH, DEFAULT_LOGGING_MASK))
    node.add_remote(ehost, eport)

    gun = Gun(node, group)
    logger.info('Connection to transport node %s' % zhost)
    transport = ZK(zhost, group, timeout=3)

    logger.info('Starting task processing')

    while True:
        # time.sleep(1)
        logger.info('Fetching task from queue')

        try:
            with transport.item() as item:
                if not item:
                    raise ValueError('No item fetched')
                task = json.loads(item)

                logger.info('Task %s fetched: %s' % (task['key'], task))
                gun.fire(task['key'].encode('utf-8'), from_=task['sgroups'], to_=task['dgroups'])
                logger.info('Task %s processed' % (task['key'],))

        except Exception as e:
            logger.error(type(e))
            logger.error(e)
            pass


if __name__ == '__main__':
    # d = Daemon('/var/run/elliptics-gatlinggun/gatlinggun', 'indigo', stdout='/tmp/gatlingtest', stderr='/tmp/gatlingtest')
    # d.run = daemon_test
    # d.start()
    main.command()